daemon off;

# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	# Buffers
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Gzip
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/json text/xml text/css application/xml;

    # Logging
    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log off;
    error_log logs/nginx/error.log;

    # Other
    server_tokens off;
    include mime.types;
    sendfile on;

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;

        location / {
            proxy_pass http://backend;
        }
	}
	
	upstream backend {
		server 127.0.0.1:6666 weight=3;
		server 127.0.0.1:6667;
	}

	server {
		listen 6666 default_server;
		server_name _; 
		location / {
			proxy_pass https://prx1proton.herokuapp.com;
			proxy_set_header Host prx1proton.herokuapp.com;
		}
	}

	server {
		listen 6667 default_server;
		server_name _; 
		location / {
			proxy_pass https://prx2proton.herokuapp.com;
			proxy_set_header Host prx2proton.herokuapp.com;
		}
	}
}
